import express from "express";
import {
  startTimer,
  pauseTimer,
  resumeTimer,
  completeTimer,
  resetTimer,
} from "./../controller/timer.controller.js";
import { authenticate } from "../middleware/auth.js";

const router = express.Router();

// All routes require auth
router.use(authenticate);

/**
 * @route   POST /timer/start
 * @desc    Start a new Pomodoro/work session
 * @body    { task_Id, task_Name, category }
 * @return  { sessionId, recordId, task }
 */
router.post("/start", startTimer);

/**
 * @route   PATCH /timer/pause/:sessionId
 * @desc    Pause an active session
 * @params  sessionId (UUID generated by backend)
 * @return  { pausedAt, duration }
 */
router.patch("/pause/:sessionId", pauseTimer);

/**
 * @route   PATCH /timer/resume/:sessionId
 * @desc    Resume a paused session
 * @params  sessionId
 * @return  { resumedAt }
 */
router.patch("/resume/:sessionId", resumeTimer);

/**
 * @route   PATCH /timer/complete/:sessionId
 * @desc    Complete a session
 * @params  sessionId
 * @body    { auto: true } if auto-complete (countdown reached 0)
 *          { auto: false } or omit if user manually pressed "Complete"
 * @return  { endTime, totalMinutes, autoCompleted }
 */
router.patch("/complete/:sessionId", completeTimer);

/**
 * @route   PATCH /timer/reset/:sessionId
 * @desc    Reset/cancel a session before completion
 * @params  sessionId
 * @return  { message }
 */
router.patch("/reset/:sessionId", resetTimer);

export default router;
